<apex:page standardController="Loop__DDP_Integration_Option__c" extensions="Loop.smtpPasswordExt" title="{!$ObjectType.Loop__DDP_Integration_Option__c.label} Edit: {!Loop__DDP_Integration_Option__c.Name}" tabStyle="Loop__DDP__c">
    <script type="text/javascript" src="{!URLFOR($Resource.Scripts, 'jQuery.js')}" ></script>
    <script type="text/javascript" src="{!URLFOR($Resource.Scripts, 'jquery.drawloop.js')}"></script>
    <script type="text/javascript">
        jQuery.noConflict(); // Can not use $ because prototype and jQuery will have naming issues.
                             // This command fixes that, but you must use "jQuery" instead of "$"
                             // for jQuery commands.
        jQuery(function() {
            if (!window.authSet) {
                authSet = true;
                connectedAppsEnabled = {!connectedAppsEnabled};
                if (connectedAppsEnabled) {
                    jQuery.authorize({
                        accessToken: '{!JSENCODE($Api.Session_Id)}',
                        userId: '{!JSENCODE($User.Id)}',
                        sandbox: {!isSandbox},
                        onChangeRequiresAuth: setAuthRequired,
                        onChangeRequestingAuth: setRequestingAuth,
                        verifyError: function(data) {
                            if (!data.Response) {
                                setMessage('An unexpected response was received attempting to verify authorization.', 'error');
                            } else if (data.Response.toLowerCase() == 'error') {
                                if (data.Error && data.Error.toLowerCase() == 'invalid_app_access') {
                                   setMessage('You do not have access to this app. If you feel this is an error, please contact your Administrator about gaining access.', 'error');
                                   setRunEnabled(false);
                                } else {
                                    setMessage(data.ErrorDescription, 'error');
                                }
                            }
                        },
                        authFlowComplete: handleAuthCallback
                    });
                }
            }
            jQuery.notifie({
                allowCompatibilityView: false,
                requiredVersion: 7,
                containerSelector: '#ieMsgs',
                compatibilityViewMessage: '{!JSENCODE($Label.IE_Compatibility_View_Warning)}',
                versionMessage: '{!JSENCODE($Label.IE_Higher_Version_Required)}'
            });
        });
        
        // OAuth Authorization
        function setRunEnabled(enabled) {
            if (!enabled) {
                jQuery('.pbButton .btn:not(.cancelBtn)').addClass('btnDisabled').attr('disabled', true);  
            } else {
                jQuery('.pbButton .btn:not(.cancelBtn)').removeClass('btnDisabled').removeAttr('disabled');   
            }   
        };
        function setRequestingAuth(requesting) {
            setRunEnabled(!requesting);
        };
        function setAuthRequired(required) {
            requiresAuthorization = required;
            if (required) {
                setMessage('Authorization is required to continue. Click "Save" to authorize and continue.');
            } else {
                jQuery('#authRequired').fadeOut(400, function() { jQuery('#authRequired').remove(); });
            }
        };
        function setMessage(msg, msgType) {
            var $con = jQuery('#authRequired');
            if (!$con.length) $con = jQuery('<span id="authRequired" class="message infoM4" />').insertAfter('.pbButton .cancelBtn');
        
            var $con = jQuery('#authRequired');
            $con.text(msg || '')
                .removeClass('infoM4 warningM4 errorM4')
                .addClass((msgType || 'info') + 'M4')
                .prepend('<img class="msgIcon" src="/s.gif" />');
            if (msg) $con.show();
            else $con.hide();
        };
        function handleAuthCallback(result) {
            var status = (result.status || '').toLowerCase();
            if (result.status == 'success') {
                setAuthRequired(false);
                saveOptions();
            } else if (result.error == 'access_denied') {
                setMessage('You must authorize Nintex DocGen to run {!$ObjectType.Loop__DDP__c.labelPlural}.', 'warning');
            } else if (result.error == 'oauth_app_access_denied') {
                setMessage('You are not approved to access this app. Contact your Salesforce Administrator for approval.', 'error');
            } else {
                setMessage(result.error + ': ' + result.error_description, 'error');
            }
        };
        
        function saveClick() {
            if (connectedAppsEnabled && jQuery.authorize('getStatus').requiresAuthorization) {
                jQuery.authorize('launchAuthorizationFlow');
                return false;
            }
            saveOptions();
            return true;
        }
    </script>
    
    <apex:sectionHeader title="{!$ObjectType.Loop__DDP_Integration_Option__c.label} Edit" subtitle="{!cio.Name}" />
    <div id="ieMsgs" />
    <apex:pageMessages id="pgmsgs" />
    <apex:form >
        <apex:pageBlock mode="edit" title="{!IF(AND(NOT(integrationOptions.empty), NOT(displayNewIntegration)), $ObjectType.Loop__DDP_Integration_Option__c.label + ' Edit', 'New ' + types[0] + ' Credentials')}">
            <apex:pageBlockButtons location="top">
                <apex:actionFunction action="{!save}" name="saveOptions" status="saveStatus" reRender="pgmsgs" />
                <apex:commandButton value="Save" reRender="pgmsgs" onclick="if (!saveClick()) return false;" status="saveStatus" />
                <apex:commandButton value="Cancel" action="{!cancel}" immediate="true" styleClass="cancelBtn" />
                <apex:actionStatus stopText="" id="saveStatus" styleClass="nowrap">
                    <apex:facet name="start">
                        <span class="statusContainer"><span class="status"><img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." /></span></span>
                    </apex:facet>
                </apex:actionStatus>
            </apex:pageBlockButtons>
            <apex:pageBlockSection columns="1" rendered="{! hasIntegrations && !displayNewIntegration}">
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="{!types[0] + ' Credentials'}" for="smtpSelectList"/>
                    <apex:outputPanel layout="block" styleClass="requiredInput">
                        <apex:outputPanel layout="block" styleClass="requiredBlock"/>
                        <apex:selectList id="smtpSelectList" size="1" value="{!selectedIntegrationOption}">
                            <apex:selectOptions id="integrationOptions" value="{!integrationOptions}"/>
                        </apex:selectList>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value=""/>
                    <apex:commandLink id="addNewCredentials" action="{!showNewIntegration}">{!'Add new ' + types[0] + ' Credentials'}</apex:commandLink>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1" rendered="{! !hasIntegrations || displayNewIntegration}">
                <apex:pageBlockSectionItem >
                    <apex:outputLabel for="integrationName" value="Name"/>
                    <apex:outputPanel layout="block" styleClass="requiredInput">
                        <apex:outputPanel layout="block" styleClass="requiredBlock"/>
                        <apex:inputText id="integrationName" value="{!newIntegrationName}"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel for="domain" value="{!domainLabel}"/>
                    <apex:outputPanel layout="block" styleClass="requiredInput">
                        <apex:outputPanel layout="block" styleClass="requiredBlock"/>
                        <apex:inputText id="domain" value="{!newDomain}"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:inputField value="{!cio.Loop__SSL__c}" rendered="{!AND($Request.ftp='true',$Request.sftp!='true')}" />
                <apex:pageBlockSectionItem >
                    <apex:outputLabel for="username" value="Username"/>
                    <apex:outputPanel layout="block" styleClass="requiredInput">
                        <apex:outputPanel layout="block" styleClass="requiredBlock"/>
                        <apex:inputText id="username" value="{!newUsername}"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel for="password" value="Password" />
                    <apex:outputPanel layout="block" styleClass="requiredInput">
                        <apex:outputPanel layout="block" styleClass="requiredBlock"/>
                        <apex:inputSecret id="password" value="{!password}"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
</apex:page>