<apex:page title="Nintex DocGen" controller="Loop.MassLoopPlusExt" action="{!onload}" id="aPage" showHeader="{!showHeader}" sidebar="{!showSidebar}" lightningStylesheets="true">
    <style type="text/css">
        /* Standard Styles */

        .bDescription {
            margin: 10px 0 10px 30px;
        }

        span.required {
            border-left: 2px red solid;
            padding: 2px;
        }
        .ui-state-highlight td {
            background-color: #00FF00;
            margin-left: -1px;
            width: 100%;
        }
        #wait {
            visibility: hidden;
            display: block;
            font-weight: bold;
            margin-top: 5px;
            margin-left: 2px;
        }
        .block { display: block; }
        li { clear: both; }
        div.ddps, div.optdiv {
            margin: 0px 15px 0 0;
            float: left;
        }
        #attachli, div.attachli2 { float: left; }
        .delivli {
            margin-top: 30px;
            vertical-align: top;
        }
        li.third {
            padding-top: 30px !important;
            padding-top: 0px;
        }
        .optdoclabel {
            display: block;
            float: left;
        }
        .arg {
            margin-top: 0px !important;
            margin-top: -1.2em;
        }
        .movedown {
            margin-top: 0px !important;
            margin-top: 10px;
        }
        .buttondiv {
            clear: both;
            margin-left: 40px;
            padding-top: 25px !important;
            padding-top: 0px;
        }
        #ddpselect, #ddpselect { min-width: 120px; }
        .delivli table {
            font-size: 100%;
            width: auto;
            clear: both;
        }
        .delivli td { padding: 0px 5px; }
        .delivli td input { margin-left: 0; margin-right: 0; }
        .delivli td label { margin-left: 3px; }
        table.ds { width: 95%; }
        .ds td { padding: 4px 2px 4px 5px; }
        .ds .note textarea { width: 200px; }
        #form_processing_img, #form_loading_img {
            margin: 5% 45%;
            width: 65px;
        }
        #form_processing_img img { margin: 0px 14px; }
        #form_loading_img img { margin: 0px 5px; }
        #form_processing_img span, #form_loading_img span {
            float: left;
            width: inherit;
        }
        .error { color: #AA0000; }
        .invisible { display: none; }
        select option, select optgroup { padding-right: 15px; }
        div.dslogin label { float: left; }
        div.dslogin input { width: 250px; }
        div.dslogin label { width: 150px; }
        div.dslogin, div.dslogin input, div.dslogin select { clear: both; }
        div.dslogin div {
            padding: 5px 3px 5px 5px;
            display: block;
            clear: both;
            height: 1.5em;
        }
        input.subject { width: 400px; }
        textarea.emailBody {
            width: 400px;
            height: 10em;
        }
        #dsCustomEmail { clear: both; }
        #dsCustomEmail .btn { margin: 5px 0; }
        #dsEmailOptions, #dsRecipients, .ds { margin-top: 10px; }
        .list th { border-top: 2px solid #CCC; }
        .moveup {
            position: relative;
            top: -1.3em;
            margin-top: 0 !important;
            margin-top: -1.3em;
        }
        .lookupIcon, .lookupIconOn { vertical-align: bottom; }
        #form_proc_img {
            position: absolute;
            text-align: center;
            width: 95%;
            z-index: 3;
            top: 12px;
        }
        #form_proc_img img {
            display: block;
            margin: auto;
        }
        #overlay {
            height: 75px;
            width: 100%;
            background-color: #E8E8E8;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 2;
            filter: alpha(opacity=60);
            opacity: 0.6;
            -moz-opacity: 0.6;
        }
        .relative { position: relative; z-index: 1; }
        .attachTable, .attachTable th, .attachTable td {
            border: 1px solid gray;
            border-collapse: collapse;
        }
        .attachTable td.wide { /* ONLY USED FOR NON-MASS */
            max-width: 250px;
            word-wrap: break-word;
        }
        div.outerdiv { width: 30em; }
        div.innerdiv
        {
            overflow: auto;
            height: 10em;
            border: 1px solid #d4d0c8;
        }
        div.sortLine { height: 2px; background-color: #000000; }
        img.invalidAdHocFile { /* ONLY USED FOR NON-MASS */
            width: 12px;
            height: 12px;
            margin-left: 3px;
        }
        #authRequired .msgIcon {
            position: relative;
            top: 3px;
            margin-right: 4px;
        }
        li.reportSelection select { /* ONLY USED FOR MASS */
            margin: 2px;
        }
    </style>
    <script type="text/javascript" src="{!URLFOR($Resource.Scripts, 'jQuery.js')}" ></script>
    <script type="text/javascript" src="{!URLFOR($Resource.Scripts, 'jquery.drawloop.js')}"></script>
    <apex:includeScript value="/support/console/22.0/integration.js"/>
    <apex:includescript value="{!URLFOR($Resource.Loop__CKEditor, 'ckeditor/ckeditor.js')}" />
    <script type="text/javascript">
        jQuery.noConflict(); // Can not use $ because prototype and jQuery will have naming issues.
                             // This command fixes that, but you must use "jQuery" instead of "$"
                             // for jQuery commands.
        jQuery(function() {
            jQuery.notifie({
                allowCompatibilityView: false,
                requiredVersion: 7,
                containerSelector: '#ieMsgs',
                compatibilityViewMessage: '{!JSENCODE($Label.IE_Compatibility_View_Warning)}',
                versionMessage: '{!JSENCODE($Label.IE_Higher_Version_Required)}'
            });
        });

        String.prototype.escapeHtml = function()
        {
            return this.replace('<', '&lt;').replace('>', '&gt;').replace('"', '&quot;');
        }

        function setFocusOnLoad() {
            // do nothing. We don't want to focus on the first available element here.
        }

        function checkForOAuthResponse() {
            var s = /[\?&]callback=([^&]+)/;
            if (s.test(window.location.search)) {
                var m = window.location.search.match(s)[1];
                invokeOpenerMethod(m, [window.location.href]);
            }
        };
        function invokeOpenerMethod(method, args) {
            var win = window.opener;
            //win[method].apply(this, args);
            Function.prototype.apply.call(win[method], this, args);
            //win[method](args);
            window.close();
        };

        checkForOAuthResponse();

        isSubmitted = false;
        function runSubmit(a) {
            if (a == 'run') {
                if (connectedAppsEnabled && jQuery.authorize('getStatus').requiresAuthorization) {
                    jQuery.authorize('launchAuthorizationFlow');
                    return false;
                }
                jQuery('[id="aPage:aForm:pageMessages"]').hide();
            }
            jQuery('[id="aPage:aForm:run"]').attr('disabled', 'disabled');
            jQuery('#wait').css('visibility', 'visible');
            disableForm();
            isSubmitted = true;
            return true;
        }

        function runUnSubmit() {
            jQuery('[id="aPage:aForm:run"]').removeAttr('disabled');
            jQuery('#wait').css('visibility', 'hidden');
            jQuery('input.required').parent().addClass('required');
            enableForm();
            isSubmitted = false;
        }

        function disableForm() {
            jQuery('#overlay').css('height', jQuery('[id="aPage:aForm"]').height());
            jQuery('#form_proc_img,#overlay').removeClass('invisible');
        }

        function enableForm() {
            jQuery('#form_proc_img,#overlay').addClass('invisible');
        }

        function moveMiscFiles(elementId) {
            var mouseX, mouseY, lastX, lastY = 0;
            var moved = false;
            jQuery().mousemove(function(e) { mouseX = e.pageX; mouseY = e.pageY; moved = true; });
            var need_select_workaround = typeof jQuery(document).attr('onselectstart') != 'undefined';
            jQuery('[id="aPage:aForm:'+elementId+'"] tr').bind('mousedown', function (e) {
                moved = false;
                jQuery('label').unbind('click');
                if (e.target.type != 'checkbox')
                {
                    lastY = mouseY;
                    var firstY = lastY;
                    var tr = jQuery(this);
                    var checked = jQuery(this).find('input').attr('checked');
                    tr.fadeTo('fast', 0.2);
                    jQuery('tr', tr.parent() ).not(this).mouseenter(function(event){
                        if (
                            (tr.nextAll(':has(div.sortLine):first').length == 0 || tr.nextAll(':has(div.sortLine):first').prevAll().index(event.currentTarget) > -1)
                         && (tr.prevAll(':has(div.sortLine):first').length == 0 || tr.prevAll(':has(div.sortLine):first').nextAll().index(event.currentTarget) > -1)
                        ) {
                            if (tr.parent().find('tr').index(this) > tr.parent().find('tr').index(tr.get(0)))
                                jQuery(this).after(tr);
                            else
                                jQuery(this).before(tr);
                        }
                        lastY = mouseY;
                    });
                    jQuery('body').mouseup(function () {
                        tr.fadeTo('fast', 1);
                        jQuery('tr', tr.parent()).unbind('mouseenter');
                        if (need_select_workaround)
                            jQuery(document).unbind('selectstart');
                        if (moved)
                            tr.find('label').bind('click', function() { return false; });
                        reorder(elementId);
                        jQuery('body').unbind('mouseup');
                    });
                    e.preventDefault();
                    if (need_select_workaround)
                        jQuery(document).bind('selectstart', function () { return false; });
                }
                return false;
            }).css('cursor', 'move');
        }

        function sortableStopBorders() {
            var sortableDocs = JSON.parse(jQuery("[id$=':sortableDocs']").val());

            var hasSortGroups = false;
            var inputs = jQuery("[id$=':optionalDocs'] input");
            for (var i = 0; i < sortableDocs.length; i++) {
                if (sortableDocs[i].length > 1 || (i+1 < sortableDocs.length && sortableDocs[i+1].length > 1)) {
                    hasSortGroups = true;
                    jQuery("[value='"+sortableDocs[i].join("'],[value='")+"']")
                        .filter(':last').parent().parent()
                        .after('<tr><td><div class="sortLine">&nbsp;</div></td></tr>');
                }
            }
            jQuery("[id$=':optionalDocs'] tr:last:has(div.sortLine)").remove();
            if (hasSortGroups)
                moveMiscFiles('optionalDocs');
        }

        function reorder(elementId) {
            var position = 1;
            var order = new Array();
            var order2 = new Array();
            jQuery('[id="aPage:aForm:'+elementId+'"] tbody tr input:checked').each(function (i) {
                order.push(jQuery(this).val());
                if (jQuery(this).parent().parent().find('input[id$="caseAttachmentVal"]').length > 0)
                    order2.push(jQuery(this).parent().parent().find('input[id$="caseAttachmentVal"]').val());
            });
            if (elementId == 'enclosureSelect') {
                jQuery('[id="aPage:aForm:enclosureOrder"]').val(order.join(','));
            }
            else if (elementId == 'attachments') { /* ONLY USED IN NON-MASS */
                jQuery('[id="aPage:aForm:attachmentOrder"]').val(order.join(';'));
                jQuery('[id="aPage:aForm:caseAttachmentOrder"]').val(order2.join(';'));
            }
            else if (elementId == 'optionalDocs') {
                var sortableDocs = JSON.parse(jQuery("[id$=':sortableDocs']").val());
                var newSortableDocs = [];
                for (var i = 0; i < sortableDocs.length; i++) {
                    newSortableDocs.push([]);
                    jQuery("[id$=':optionalDocs'] tr:has(input[value='"+sortableDocs[i].join("'],[value='")+"'])").each(function() {
                        newSortableDocs[i].push(jQuery(this).find('input').val());
                    });
                    if (newSortableDocs[i].length < 1) {
                        for (var j = 0; j < sortableDocs[i].length; j++) {
                            newSortableDocs[i].push(sortableDocs[i][j]);
                        }
                    }
                }
                jQuery("[id$=':sortableDocs']").val(JSON.stringify(newSortableDocs));
            }
        }

        function addMoreInputs(divId, namePrefix) {
            if (!namePrefix) namePrefix = '';
            var ser = jQuery('[id="aPage:aForm"]').serialize().split('&');
            jQuery("#"+divId).html('');
            if (jQuery("#"+divId).length == 0) {
                jQuery('#myForm,#ddpForm').append('<div id="'+divId+'"></div>');
            }
            for (var i = 0; i < ser.length; i++) {
                var inputVal = '';
                if (ser[i].split(/=/).length > 1)
                    inputVal = decodeURIComponent(ser[i].split(/=/)[1].replace(/\+/g, ' '));
                var inputName = decodeURIComponent(ser[i].split(/=/)[0]);
                if (inputName.indexOf('com.salesforce.visualforce.ViewState') != 0) {
                    jQuery("#"+divId).append(jQuery('<input />').attr('type', 'hidden').attr('name', namePrefix + inputName).val(inputVal));
                }
            }
        }

        // BEGIN SERVICE CLOUD CONSOLE SCRIPT
        thisTabId = null;
        primaryTabId = null;
        function resetPreviousTab(result) {
            if (result.success == true)
                sforce.console.getEnclosingTabId(refreshTab);
        }
        function refreshTab(result) {
            sforce.console.refreshSubtabById(result.id);
        }
        function openSubTab(result) {
            sforce.console.openSubtab(result.id, window.location.href+'&previousTabId='+thisTabId+'&isSubTab=true', true, '', null, resetPreviousTab, '');
        };
        function getTabId(result) {
            return result.id
        }
        function openCaseTab(caseId) {
            if (sforce && sforce.console && sforce.console.isInConsole()) {
                if (caseId == '{!JSENCODE(caseId)}')
                    sforce.console.focusSubtabById('{!JSENCODE($Request.previousTabId)}');
                else {
                    sforce.console.getEnclosingPrimaryTabId(function(result) {
                        sforce.console.openSubtab(result.id, '/'+caseId, true);
                    });
                }
            }
            else
                window.open('/'+caseId);
        }
        function cancelClick() {
            if (sforce && sforce.console && sforce.console.isInConsole()) {
                sforce.console.closeTab(thisTabId);
                return false;
            } else if ('{!JSENCODE(cancelURL)}'.toLowerCase() == 'closewindow') {
                window.close();
                return false;
            } else if ('{!useLightningExperience}') {
                window.location.href = '{!JSENCODE(breadCrumbUrl)}';
                return false;
            }
            jQuery('[id="aPage:aForm"]').attr('target', '_top');
            return true;
        }
        redirect = null;
        function receiveMessage(e) {
            var pattern = /(^https:\/\/[^.\/]+.drawloop.com)|(^http:\/\/localhost:1948)/gi;
            if (pattern.test(e.origin))
            {
                if ((/^https:/gi).test(e.data))
                {
                    redirect = e.data;
                    sforce.console.getEnclosingPrimaryTabId(function(result) {
                        sforce.console.openSubtab(
                            result.id,
                            redirect,
                            true,
                            '{!JSENCODE(poweredBy)}',
                            thisTabId
                        );
                    });
                } else {
                    if (e.data != 'closeTab')
                        alert(e.data);
                    sforce.console.refreshSubtabById('{!JSENCODE($Request.previousTabId)}', false, function(){
                        sforce.console.closeTab(thisTabId);
                    });
                }
            }
        }
        function breadcrumbClick() {
            if (isSubmitted) {
                sforce.console.refreshSubtabById('{!JSENCODE($Request.previousTabId)}', false, function(){
                    sforce.console.closeTab(thisTabId);
                });
            }
            else {
                sforce.console.closeTab(thisTabId);
            }
            return false;
        }
        // END SERVICE CLOUD CONSOLE SCRIPT

        // OAuth Authorization
        function setRunEnabled(enabled) {
            if (!enabled) {
                jQuery('.buttondiv .btn:not(.cancelBtn)').addClass('btnDisabled').attr('disabled', true);
            } else {
                jQuery('.buttondiv .btn:not(.cancelBtn)').removeClass('btnDisabled').removeAttr('disabled');
            }
        };
        function setRequestingAuth(requesting) {
            setRunEnabled(!requesting);
        };
        function setAuthRequired(required) {
            requiresAuthorization = required;
            if (required) {
                setMessage('Authorization is required to continue. Click "Run" to authorize and run your {!$ObjectType.Loop__DDP__c.label}.');
            } else {
                jQuery('#authRequired').fadeOut(400, function() { jQuery('#authRequired').remove(); });
            }
        };
        function setMessage(msg, msgType) {
            var $con = jQuery('#authRequired');
            if (!$con.length) $con = jQuery('<span id="authRequired" class="message infoM4" />').insertAfter('.buttondiv .cancelBtn');

            var $con = jQuery('#authRequired');
            $con.text(msg || '')
                .removeClass('infoM4 warningM4 errorM4')
                .addClass((msgType || 'info') + 'M4')
                .prepend('<img class="msgIcon" src="/s.gif" />');
            if (msg) $con.show();
            else $con.hide();
        };
        function handleAuthCallback(result) {
            var status = (result.status || '').toLowerCase();
            if (result.status == 'success') {
                setAuthRequired(false);
                runSubmit('run');
                submitLooplus(true);
            } else if (result.error == 'access_denied') {
                setMessage('You must authorize Nintex DocGen to run {!$ObjectType.Loop__DDP__c.labelPlural}.', 'warning');
            } else if (result.error == 'oauth_app_access_denied') {
                setMessage('You are not approved to access this app. Contact your Salesforce Administrator for approval.', 'error');
            } else {
                setMessage(result.error + ': ' + result.error_description, 'error');
            }
        };
    </script>
    <apex:outputPanel id="ckEditorScript">
        <script type="text/javascript">
            function ReloadCKEditor() {
                for (name in CKEDITOR.instances) {
                   delete CKEDITOR.instances[name];
                }
                CKEDITOR.replaceAll(function(textarea, config) {
                    if (textarea.classList.contains('ckeditor')) {
                        config.toolbar = 'full';
                        config.removePlugins = '';
                        config.resize_enabled = true;
                        return true;
                    }
                    return false;
                });
                console.log('{!JSENCODE(cOption.body)}');
                CKEDITOR.instances['aPage:aForm:dsEmail'].setData('{!JSENCODE(cOption.body)}');
            }
        </script>
    </apex:outputPanel>
    <apex:outputPanel id="onloadScript">
        <script type="text/javascript">
            jQuery(function() {
                if (!window.authSet) {
                    authSet = true;
                    connectedAppsEnabled = {!connectedAppsEnabled};
                    if (connectedAppsEnabled && '{!JSENCODE(autoPost)}' != 'true' && '{!JSENCODE(autoPost)}' != 'test') {
                        jQuery.authorize({
                            accessToken: '{!JSENCODE(sessionid)}',
                            userId: '{!JSENCODE(loopUserId)}',
                            sandbox: {!isSandbox},
                            onChangeRequiresAuth: setAuthRequired,
                            onChangeRequestingAuth: setRequestingAuth,
                            verifyError: function(data) {
                                if (!data.Response) {
                                    setMessage('An unexpected response was received attempting to verify authorization.', 'error');
                                } else if (data.Response.toLowerCase() == 'error') {
                                    if (data.Error && data.Error.toLowerCase() == 'invalid_app_access') {
                                       setMessage('You do not have access to this app. If you feel this is an error, please contact your Administrator about gaining access.', 'error');
                                       setRunEnabled(false);
                                    } else {
                                        setMessage(data.ErrorDescription, 'error');
                                    }
                                }
                            },
                            authFlowComplete: handleAuthCallback
                        });
                    }
                }
                var bcTarget = 'target="_top"';
                var actsLikeSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;
                if (sforce && sforce.console && sforce.console.isInConsole()) {
                    bcTarget = 'onclick="return breadcrumbClick();"';
                    if ('{!JSENCODE($Request.isSubTab)}' != 'true') {
                        sforce.console.getEnclosingTabId(function(result){
                            thisTabId=result.id;
                            sforce.console.getEnclosingPrimaryTabId(openSubTab);
                        });
                        return false;
                    }
                    else {
                        sforce.console.setTabTitle('{!JSENCODE(consoleTabTitle)}');
                        sforce.console.getEnclosingTabId(function(result){thisTabId=result.id;});
                        if (window.addEventListener)
                        {
                            window.addEventListener('message',receiveMessage,false);
                        }
                        else
                        {
                            window.attachEvent('onmessage', receiveMessage);
                        }
                        jQuery('#dlContainer').show();
                    }
                }
                else if ('{!JSENCODE(cancelURL)}'.toLowerCase() == 'closewindow') {
                    bcTarget = 'onclick="return cancelClick();"';
                }

                if ('{!JSENCODE(tabPrefix)}' != '') {
                    //OLD ACTIVE TAB STYLE
                    jQuery('.currentTab, .primaryPalette').removeClass('currentTab primaryPalette');
                    jQuery('a[href$="/{!JSENCODE(tabPrefix)}/o"]').parent().parent('td').addClass('currentTab primaryPalette');
                    //NEW ACTIVE TAB STYLE
                    jQuery('li.zen-active,li.phm.active').removeClass('zen-active primaryPalette active');
                    jQuery('li a[href$="/{!JSENCODE(tabPrefix)}/o"]').parent().addClass('zen-active primaryPalette active');
                }
                if ('{!JSENCODE(ddpRecordType)}' != '' && '{!JSENCODE(ddpRecordType)}' != 'Custom Object')
                    jQuery("body").addClass('{!JSENCODE(ddpRecordType)}'.toLowerCase()+"Tab").removeClass("taskTab").removeClass("homeTab");
                else if ('{!JSENCODE($Request.tabclass)}' != '')
                    jQuery("body").addClass('{!JSENCODE($Request.tabclass)}').removeClass("taskTab").removeClass("homeTab");

                if ('{!JSENCODE(IF(cOption.r.dsAllowEmailCustomizations__c,"true","false"))}' == 'true') {
                    if (CKEDITOR && CKEDITOR.instances && CKEDITOR.instances['aPage:aForm:dsEmail'] && CKEDITOR.instances['aPage:aForm:dsEmail'].getData())
                        jQuery('#{!JSENCODE(cOption.r.Id)}_emailText').val(CKEDITOR.instances['aPage:aForm:dsEmail'].getData());
                    else
                        jQuery('#{!JSENCODE(cOption.r.Id)}_emailText').val('{!JSENCODE(cOption.body)}');
                }

                var promptUserAndRedirect = '{!JSENCODE(loopAlert)}' != '';
                if ('{!JSENCODE(loopSrc)}' != '')
                {
                    addMoreInputs("moreInputs");
                    if (jQuery('#myForm input[name="next"]').val() == '') {
                        jQuery('#myForm input[name="next"]').val('{!JSENCODE(loopSrc)}');
                    }
                    jQuery("#myForm").submit();
                }
                else if ('{!JSENCODE(formSrc)}' != '') {
                    runSubmit();
                    addMoreInputs("moreFormInputs", 'frm:');
                    //SOMETHING'S NOT WORKING HERE
                    if (jQuery('#ddpForm input[name="formSrc"]').val() == '') {
                        jQuery('#ddpForm input[name="formSrc"]').val('{!JSENCODE(formSrc)}')
                    }
                    jQuery("#ddpForm").submit();
                }
                else
                {
                    if ('{!JSENCODE(breadCrumbUrl)}' != '' && '{!JSENCODE(headerTitle)}' != '' && jQuery('#dlbc').length < 1)
                        jQuery('.bPageTitle:first').append('<div class="ptBreadcrumb" id="dlbc"><a href="{!JSENCODE(breadCrumbUrl)}" '+bcTarget+'> &laquo; {!JSENCODE($Label.DDP_Breadcrumb)} {!JSENCODE(headerTitle)}</a></div>');
                    if ('{!JSENCODE(autoPost)}' == 'true')
                        jQuery('[id="aPage:aForm:run"]').click();
                    else if ('{!JSENCODE(autoPost)}' == 'test' && jQuery('[id="aPage:aForm:runtest"]').length > 0)
                        jQuery('[id="aPage:aForm:runtest"]').click();
                    else {
                        runUnSubmit();
                    }
                    jQuery('#dlContainer').show();
                }
                if (promptUserAndRedirect) {
                    var waitTime = actsLikeSafari ? 500 : 100;
                    setTimeout(function() {
                        runUnSubmit();
                        alert('{!JSENCODE(loopAlert)}');
                        jQuery('[id="aPage:aForm:cancel"]').click();
                    }, waitTime);
                }
            });
            function setDefaultRecipient(recipientId, signerRecipientValue, isHost) {
                var $select = !isHost ?
                        jQuery('#' + recipientId + '-recipientSelect') :
                        jQuery('#' + recipientId + '-recipientHostSelect');
                $select.val(signerRecipientValue);
                // If the recipient is not defaulted via Apex, we still may be updating the default value via javascript (after)
                // If this is the case, we need to make sure the apex:inputHidden is set with that value.
                if (!signerRecipientValue && $select.val().trim()) {
                    if (!isHost) {
                        $select.parent().find('[id$=":recipientValue"]').val($select.val());
                    }
                    else {
                        $select.parent().find('[id$=":recipientHostValue"]').val($select.val());
                    }
                }
            }
        </script>
    </apex:outputPanel>
    <div id="dlContainer" class="invisible">
        <!-- 'Forms' TITLE ONLY USED IN NON-MASS -->
        <apex:sectionHeader title="{!IF(AND(headerTitle='',$Request.form='true'),'Forms',headerTitle)}" subtitle="{!poweredBy}" id="sheader" rendered="{!showHeader}" />
        <div id="ieMsgs" />
        <apex:outputPanel id="looplusForm">
            <form method="POST" id="myForm" style="height: 0px;" target="lpIframe" action="{!loopUrl}/SFLogin.aspx">
                <input type="hidden" name="sessionid" value="{!sessionId}" />
                <input type="hidden" name="location" value="{!IF(partnerServerUrl='',$Api.Partner_Server_URL_300,partnerServerUrl)}" />
                <input type="hidden" name="auto" value="true" />
                <input type="hidden" name="next" value="{!loopSrc}" />
                <input type="hidden" name="attachments" value="{!jsonAttachments}" /> <!-- NON-MASS ONLY -->
                <input type="hidden" name="sandbox" value="{!isSandbox}" />
                <input type="hidden" name="reportId" value="{!selectedReportId}" /> <!-- MASS ONLY -->
                <apex:outputPanel rendered="{!connectedAppsEnabled}">
                    <input type="hidden" name="userId" value="{!loopUserId}" />
                </apex:outputPanel>
                <div id="moreInputs"></div>
            </form>
            <form method="POST" id="ddpForm" style="height: 0px;" action="{!formUrl}{!IF($Request.isdtp='','','?isSubTab=true&isdtp='&$Request.isdtp)}">
                <input type="hidden" name="id" value="{!selectedDdpId}" />
                <input type="hidden" name="formSrc" value="{!formSrc}" />
                <input type="hidden" name="retURL" value="{!breadCrumbUrl}" />
                <input type="hidden" name="waitForProcessing" value="{!formWaitForProcessing}" />
                <input type="hidden" name="formMessageOnRun" value="{!HTMLENCODE(formMessageOnRun)}" />
                <input type="hidden" name="jsonAttachments" value="{!jsonAttachments}" />
                <input type="hidden" name="reportId" value="{!selectedReportId}" /> <!-- MASS ONLY -->
                <input type="hidden" name="prefix" value="{!prefix}" />
                <apex:repeat value="{!listParams}" var="o">
                    <input type="hidden" name="{!o.label}" value="{!o.value}" />
                </apex:repeat>
                <div id="moreFormInputs"></div>
            </form>
        </apex:outputPanel>
        <apex:form id="aForm" styleClass="{!IF(OR(autoPost='true', loopSrc!=''), 'invisible', '')}" target="lpIframe">
            <apex:pageMessages id="pageMessages" />
            <div class="bDescription">{!ddpInstructions}</div>
            <div class="relative">
                <div id="form_proc_img" class="invisible">
                    <img alt="processing" src="/img/loading.gif" />
                    please wait
                </div>
                <div id="overlay" class="invisible"></div>
                <apex:actionRegion immediate="true">
                    <apex:outputPanel rendered="{!showReportSelection}">
                        <ol>
                            <li class="reportSelection">
                                <div>Select a report to run the {!$ObjectType.DDP__c.label} from. The first column of the report must be the {!headerTitle} Id column.</div>
                                <div>
                                    <apex:outputPanel styleClass="required" />
                                    <apex:selectList value="{!selectedReportFolderId}" size="1">
                                        <apex:selectOption itemValue="" itemLabel="--None--" />
                                        <apex:selectOptions value="{!availableReportFolders}" />
                                        <apex:actionSupport event="onchange" action="{!changeReportFolder}" rerender="reportPanel" status="reportFolderStatus" />
                                    </apex:selectList>
                                    <apex:actionStatus stopText="" id="reportFolderStatus">
                                        <apex:facet name="start">
                                            <span class="statusContainer"><span class="status"><img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." /></span></span>
                                        </apex:facet>
                                    </apex:actionStatus>
                                </div>
                                <apex:outputPanel layout="block" id="reportPanel">
                                    <apex:outputPanel styleClass="required" />
                                    <apex:selectList value="{!selectedReportId}" size="1">
                                        <apex:selectOption itemValue="" itemLabel="--None--" />
                                        <apex:selectOptions value="{!availableReports}" />
                                        <apex:actionSupport event="onchange" rerender="reportPreviewPanel" status="reportStatus" onsubmit="jQuery('[id$=\':reportPreviewLink\']').hide();" />
                                    </apex:selectList>
                                    <apex:actionStatus stopText="" id="reportStatus">
                                        <apex:facet name="start">
                                            <span class="statusContainer"><span class="status"><img src="/img/loading.gif" alt="Processing..." width="16" height="16" title="Processing..." /></span></span>
                                        </apex:facet>
                                    </apex:actionStatus>
                                    <apex:outputPanel id="reportPreviewPanel">
                                        <apex:outputLink id="reportPreviewLink" rendered="{!NOT(ISBLANK(selectedReportId))}" target="_blank" value="/{!selectedReportId}">View Report</apex:outputLink>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </li>
                        </ol>
                    </apex:outputPanel>
                    <ol start="{!1+IF(showReportSelection,1,0)}">
                        <li id="ddpDocs2" class="delivli">&nbsp;
                            <div class="moveup">
                                <apex:outputPanel styleClass="ddps" rendered="{!showDdp}" layout="block">
                                    <apex:outputPanel layout="block">
                                        <label for="ddpselect2">{!IF(ddpLabel='',$Label.loop__ddp_select,SUBSTITUTE($Label.loop__ddp_select,$ObjectType.Loop__DDP__c.label,ddpLabel))}</label>
                                    </apex:outputPanel>
                                    <apex:selectList value="{!selectedDdpId}" id="ddpselect2" size="{!ddpHeight}" styleClass="slds-select select-ddp">
                                        <apex:selectOptions value="{!ddps}" />
                                        <apex:actionSupport event="onchange" action="{!ddpChanged}" onsubmit="runSubmit();" oncomplete="runUnSubmit();" rerender="optDocs,attachments,enclosuresPanel,delivPanel,dsli2,batchNotificationPanel,looplusForm,pageMessages,onloadScript" />
                                    </apex:selectList>
                                </apex:outputPanel>
                                <apex:outputPanel layout="block" id="optDocs">
                                    <apex:outputPanel styleClass="optdiv" layout="block" rendered="{!showOptionalDocs}">
                                        <div ondblclick="jQuery('[name$=\':optionalDocs\']').attr('checked', 'checked');">{!$Label.loop__ddp_optional_docs}</div>
                                        <apex:selectCheckboxes value="{!selectedDdp.selectedOptionalDocs}" id="optionalDocs" layout="pageDirection">
                                            <apex:selectOptions value="{!selectedDdp.optionalDocs}" />
                                        </apex:selectCheckboxes>
                                        <apex:inputHidden value="{!selectedDdp.sortableDocs}" id="sortableDocs" />
                                        <script>sortableStopBorders();</script>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <apex:outputPanel layout="block" id="attachments">
                                    <apex:outputPanel styleClass="attachli2" layout="block" rendered="{!showAttachments}">
                                        <apex:outputPanel layout="block">{!$ObjectType.Attachment.labelplural}:</apex:outputPanel>
                                        <apex:outputPanel id="xattachments">
                                            <apex:selectCheckboxes value="{!selectedAttachments}" layout="pageDirection">
                                                <apex:selectOptions value="{!attachments}" />
                                            </apex:selectCheckboxes>
                                            <apex:inputHidden value="{!miscAttachments.attachmentOrder}" id="attachmentOrder" />
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </div>
                        </li>
                    </ol>
                    <apex:outputPanel id="enclosuresPanel">
                        <apex:outputPanel rendered="{!showEnclosures}">
                        <ol start="{!2+IF(showReportSelection,1,0)}">
                            <li>
                                <div>Select Enclosures:</div>
                                <div class="outerdiv">
                                    <div class="innerdiv">
                                        <apex:selectCheckboxes id="enclosureSelect" layout="pageDirection" onchange="reorder('enclosureSelect');">
                                            <apex:selectOptions value="{!miscAttachments.enclosures}" />
                                        </apex:selectCheckboxes>
                                    </div>
                                </div>
                                <apex:inputHidden id="enclosureOrder" value="{!selectedEnclosures}" />
                                <script>moveMiscFiles('enclosureSelect');</script>
                            </li>
                        </ol>
                        </apex:outputPanel>
                    </apex:outputPanel>
                    <apex:outputPanel id="delivPanel">
                        <ol start="{!2+IF(showEnclosures, 1, 0)+IF(showReportSelection,1,0)}">
                            <li class="delivli third">
                                <div>{!IF(ddpLabel='',$Label.DDP_Delivery,SUBSTITUTE($Label.DDP_Delivery,$ObjectType.DDP__c.label,ddpLabel))}</div>
                                <div id="delivdiv2">
                                    <apex:selectRadio value="{!selectedDelivery}" id="delivery" layout="pageDirection">
                                        <apex:selectOptions value="{!deliveries}" />
                                        <apex:actionSupport event="onclick" rerender="attachBackPanel,workspacePanel,emailPanel,dsli2,pageMessages,batchNotificationPanel" action="{!cOptionChanged}" onsubmit="runSubmit();" oncomplete="runUnSubmit();" />
                                    </apex:selectRadio>
                                    <apex:outputPanel id="attachBackPanel" layout="block">
                                        <apex:outputPanel rendered="{!showAttachBack}">
                                            <table><tbody><tr><td>
                                                <apex:inputCheckbox value="{!attachBack}" id="attachback">
                                                    <apex:actionSupport event="onchange" rerender="workspacePanel,pageMessages" action="{!attachBackChange}" onsubmit="runSubmit();" oncomplete="runUnSubmit();" />
                                                </apex:inputCheckbox>&nbsp;
                                                <apex:outputLabel for="attachback" value="{!$Label.loop__ddp_attach_to} {!headerTitle}" />
                                            </td></tr></tbody></table>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <apex:outputPanel id="workspacePanel" layout="block">
                                        <apex:outputPanel rendered="{!showWorkspaceSelect}">
                                            <table><tbody><tr><td>
                                                <span style="margin-left: 5px;">{!$Label.DDP_Select_Library} </span>
                                                <apex:selectList size="1" value="{!workspaceId}" styleClass="slds-select">
                                                    <apex:selectOptions value="{!workspaces}" />
                                                </apex:selectList>
                                            </td></tr></tbody></table>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                </div>
                                <apex:outputPanel id="emailPanel">
                                    <apex:outputPanel rendered="{!cOption.r.Loop__dsAllowEmailCustomizations__c}" id="dsCustomEmail2" layout="block" style="margin-top: 10px;">
                                        <apex:commandButton styleClass="slds-button slds-button--neutral" action="{!cOption.toggleEmailEdit}" value="{!$Label.loop__loop_edit} {!$Label.site.email}" rerender="dsCustomEmail2,ckEditorScript,pageMessages" oncomplete="ReloadCKEditor();" />
                                        <table cellspacing="0" class="ds {!cOption.emailEditRendered}" id="emailEdit">
                                            <tr>
                                                <td><apex:outputLabel value="{!$ObjectType.Task.fields.Subject.label}: " for="dsSubject" rendered="{!cOption.r.RecordType.DeveloperName != 'e_SignLive'}" /></td>
                                                <td><apex:inputText value="{!cOption.subject}" id="dsSubject" styleClass="subject slds-input" rendered="{!cOption.r.RecordType.DeveloperName != 'e_SignLive'}" /></td>
                                                <td><input type="hidden" name="{!cOption.r.Id}_emailSubject" value="{!cOption.subject}" /></td>
                                            </tr>
                                            <tr>
                                                <td><apex:outputLabel value="{!$ObjectType.Document.fields.Body.label}: " for="dsEmail" /></td>
                                                <td><apex:inputTextarea value="{!cOption.body}" id="dsEmail" styleClass="{!IF(cOption.isHtmlEmail,'ckeditor','emailBody')} slds-textarea" /></td>
                                                <td><input type="hidden" id="{!cOption.r.Id}_emailText" name="{!cOption.r.Id}_emailText" value="" /></td>
                                            </tr>
                                        </table>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                            </li>
                        </ol>
                    </apex:outputPanel>
                    <apex:outputPanel id="dsli2">
                        <apex:outputPanel rendered="{!showEsignRecipients}">
                            <ol start="{!3+IF(showEnclosures, 1, 0)}+IF(showReportSelection,1,0)">
                                <li class="delivli" id="dsli3" style="list-style-type: decimal;">
                                    <div>{!cOption.r.RecordType.Name} {!$ObjectType.dsRecipient__c.labelplural}:</div>
                                    <apex:outputPanel id="dsCreds" layout="block" rendered="{!(cOption.r.RecordType.DeveloperName == 'DocuSign')}" styleClass="dslogin {!IF(OR(showDsAccountIds,showDsun,showDspass), '', 'invisible')}" style="{!IF(useLightningExperience, 'width: 400px;', '')}" >
                                        <input type="hidden" name="dsacct" value="{!dsacct}" />
                                        <input type="hidden" name="dsun" value="{!dsun}" />
                                        <input type="hidden" name="dspass" value="{!dspass}" />
                                        <apex:outputPanel layout="{!IF(useLightningExperience, '', 'block')}" rendered="{!showDsAccountIds}">
                                            <apex:outputLabel value="{!$ObjectType.Account.name}: " for="dsacct" />
                                            <apex:selectList value="{!selectedDsAccount}" size="1" id="dsacct" styleClass="slds-select">
                                                <apex:selectOptions value="{!dsAccountIds}" />
                                                <apex:actionSupport event="onchange" rerender="dsCreds,pageMessages" />
                                            </apex:selectList>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="{!IF(useLightningExperience, '', 'block')}" rendered="{!showDsun}">
                                            <apex:outputLabel value="{!$Label.site.username}:" for="dsun" />
                                            <apex:inputText id="dsun" value="{!dsun}" styleClass="slds-input" />
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="{!IF(useLightningExperience, '', 'block')}" rendered="{!showDspass}">
                                            <apex:outputLabel value="{!$Label.site.password}:" for="dspass" />
                                            <apex:inputSecret id="dspass" value="{!dspass}" redisplay="true" styleClass="slds-input" />
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <apex:dataTable value="{!recipients}" var="r" id="recipientTable" styleClass="list ds">
                                        <apex:column width="100">
                                            <apex:facet name="header">{!$ObjectType.Loop__dsRecipient__c.fields.Loop__dsRoutingOrder__c.label}</apex:facet>
                                            <apex:outputText value="{!IF(AND(cOption.r.RecordType.DeveloperName == 'Sertifi',r.r.Loop__dsRoutingOrder__c==0), 'CC', TEXT(FLOOR(r.r.Loop__dsRoutingOrder__c)))}" />
                                        </apex:column>

                                        <apex:column width="160">
                                            <apex:facet name="header">{!$ObjectType.Name.label}</apex:facet>
                                            <apex:outputPanel rendered="{!r.r.Loop__dsType__c == 'In Person Signer'}">
                                                <apex:outputText value="Signer: " style="font-weight: bold;display:block;" />
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!r.signer.isText}">
                                                <apex:outputText value="{!r.signer.label}" id="showText" />
                                                <input type="hidden" name="{!r.r.Id}_recipient" value="{!r.signer.recipientValue}" />
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="block" rendered="{!r.signer.isUserLookup}">
                                                <apex:outputPanel layout="block" id="userLookupPanel" styleClass="drawloop-bootstrap lightningLookupPanel" >
                                                    <apex:inputField id="userLookupField" value="{!r.r.Loop__dsUser__c}" styleClass="slds-input {!IF(r.r.Loop__dsRequired__c, 'required', '')}" />
                                                    <input type="hidden" name="{!r.r.Id}_recipient" value="{!r.r.Loop__dsUser__c}" />
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="block" rendered="{!r.signer.isContactLookup}">
                                                <apex:outputPanel layout="block" id="contactLookupPanel" styleClass="drawloop-bootstrap lightningLookupPanel" >
                                                    <apex:inputField id="contactLookupField" value="{!r.r.Loop__dsContact__c}" styleClass="slds-input {!IF(r.r.Loop__dsRequired__c, 'required', '')}" />
                                                    <input type="hidden" name="{!r.r.Id}_recipient" value="{!r.r.Loop__dsContact__c}" />
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!r.signer.isNameEmail}" style="white-space: nowrap;">
                                                <apex:outputPanel rendered="{!useLightningExperience}" styleClass="drawloop-bootstrap" >
                                                    <apex:outputPanel layout="block" styleclass="lightningNameEmailPanel">
                                                        <apex:inputText id="nameField" value="{!r.signer.staticName}" styleClass="recipientName {!IF(r.r.Loop__dsRequired__c, 'required', '')} slds-input" title="Name" />
                                                    </apex:outputPanel>
                                                    <apex:outputPanel layout="block" styleClass="lightningNameEmailPanel">
                                                        <apex:inputText id="emailField" value="{!r.signer.address}" styleClass="recipientAddress {!IF(r.r.Loop__dsRequired__c, 'required', '')} slds-input" style="margin-left: 3px;" title="Email" />
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!!useLightningExperience}" >
                                                    <apex:inputText value="{!r.signer.staticName}" styleClass="recipientName {!IF(r.r.Loop__dsRequired__c, 'required', '')}" title="Name" />
                                                    <apex:inputText value="{!r.signer.address}" styleClass="recipientAddress" style="margin-left: 3px;" title="Email" />
                                                </apex:outputPanel>
                                                <input type="hidden" name="{!r.r.Id}_recipient" value="name_email" />
                                                <script>
                                                    jQuery('input.recipientName').attr('placeholder', '{!JSENCODE(LOWER($ObjectType.Name.label))}...');
                                                    jQuery('input.recipientAddress').attr('placeholder', '{!JSENCODE(LOWER($ObjectType.User.fields.Email.label))}...');
                                                </script>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!NOT(OR(r.signer.isText, r.signer.isUserLookup, r.signer.isContactLookup, r.signer.isNameEmail))}" id="showDD">
                                                <select id="{!r.r.Id}-recipientSelect" onchange="jQuery(this).parent().find('[id$=\':recipientValue\']').val(this.value);" class="slds-select">
                                                    <apex:repeat value="{!r.signer.signers}" var="opt">
                                                        <option value="{!opt.value}">{!opt.label}</option>
                                                    </apex:repeat>
                                                </select>
                                                <apex:inputHidden id="recipientValue" value="{!r.signer.recipientValue}" />
                                                <input type="hidden" name="{!r.r.Id}_recipient" value="{!r.signer.recipientValue}" />
                                                <script>setDefaultRecipient('{!JSENCODE(r.r.Id)}', '{!JSENCODE(r.signer.recipientValue)}', false);</script>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!OR(r.signer.isNameEmail,BEGINS(r.r.Loop__StaticName__c, '!'),r.r.Loop__dsStaticRecipient__c='Dynamic Name-Email')}">
                                                <input type="hidden" name="{!r.r.Id}_recipient_name" value="{!r.signer.staticName}" />
                                                <input type="hidden" name="{!r.r.Id}_recipient_email" value="{!r.signer.address}" />
                                            </apex:outputPanel>

                                            <apex:outputPanel layout="block" rendered="{!r.r.Loop__dsType__c == 'In Person Signer'}">
                                                <apex:outputText value="Host: " style="font-weight: bold;display:block;" />
                                                <apex:outputPanel rendered="{!r.host.isText}">
                                                    <apex:outputText value="{!r.host.label}" id="showHostText" />
                                                    <input type="hidden" name="{!r.r.Id}_host" value="{!r.host.recipientValue}" />
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!r.host.isUserLookup}">
                                                    <apex:outputPanel layout="block" id="hostUserLookupPanel" styleClass="drawloop-bootstrap lightningLookupPanel">
                                                        <apex:inputField id="hostUserLookupField" value="{!r.r.Loop__Host_User__c}" styleClass="slds-input {!IF(r.r.Loop__dsRequired__c, 'required', '')}" />
                                                        <input type="hidden" name="{!r.r.Id}_host" value="{!r.r.Loop__Host_User__c}" />
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!r.host.isContactLookup}">
                                                    <apex:outputPanel layout="block" id="hostContactLookupPanel" styleClass="drawloop-bootstrap lightningLookupPanel">
                                                        <apex:inputField id="hostContactLookupField" value="{!r.r.Loop__Host_Contact__c}" styleClass="slds-input {!IF(r.r.Loop__dsRequired__c, 'required', '')}" />
                                                        <input type="hidden" name="{!r.r.Id}_host" value="{!r.r.Loop__Host_Contact__c}" />
                                                    </apex:outputPanel>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!r.host.isNameEmail}" style="white-space: nowrap;">
                                                    <apex:outputPanel rendered="{!useLightningExperience}" styleClass="drawloop-bootstrap" >
                                                        <apex:outputPanel layout="block" styleclass="lightningNameEmailPanel">
                                                            <apex:inputText id="hostNameField" value="{!r.host.staticName}" styleClass="recipientName {!IF(r.r.Loop__dsRequired__c, 'required', '')} slds-input" title="Name" />
                                                        </apex:outputPanel>
                                                        <apex:outputPanel layout="block" styleClass="lightningNameEmailPanel">
                                                            <apex:inputText id="hostEmailField" value="{!r.host.address}" styleClass="recipientAddress {!IF(r.r.Loop__dsRequired__c, 'required', '')} slds-input" style="margin-left: 3px;" title="Email" />
                                                        </apex:outputPanel>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel rendered="{!!useLightningExperience}" >
                                                        <apex:inputText value="{!r.host.staticName}" styleClass="recipientName {!IF(r.r.Loop__dsRequired__c, 'required', '')}" title="Name" />
                                                        <apex:inputText value="{!r.host.address}" styleClass="recipientAddress" style="margin-left: 3px;" title="Email" />
                                                    </apex:outputPanel>
                                                    <input type="hidden" name="{!r.r.Id}_host" value="name_email" />
                                                    <script>
                                                        jQuery('input.recipientName').attr('placeholder', '{!JSENCODE(LOWER($ObjectType.Name.label))}...');
                                                        jQuery('input.recipientAddress').attr('placeholder', '{!JSENCODE(LOWER($ObjectType.User.fields.Email.label))}...');
                                                    </script>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!NOT(OR(r.host.isText, r.host.isUserLookup, r.host.isContactLookup, r.host.isNameEmail))}" id="showHostDD">
                                                    <select id="{!r.r.Id}-recipientHostSelect" onchange="jQuery(this).parent().find('[id$=\':recipientHostValue\']').val(this.value);" class="slds-select">
                                                        <apex:repeat value="{!r.host.signers}" var="opt">
                                                            <option value="{!opt.value}">{!opt.label}</option>
                                                        </apex:repeat>
                                                    </select>
                                                    <apex:inputHidden id="recipientHostValue" value="{!r.host.recipientValue}" />
                                                    <input type="hidden" name="{!r.r.Id}_host" value="{!r.host.recipientValue}" />
                                                    <script>setDefaultRecipient('{!JSENCODE(r.r.Id)}', '{!JSENCODE(r.host.recipientValue)}', true);</script>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!OR(r.host.isNameEmail,BEGINS(r.r.Loop__Host_Static_Name__c, '!'),r.r.Loop__Specified_Host__c='Dynamic Name-Email')}">
                                                    <input type="hidden" name="{!r.r.Id}_host_name" value="{!r.host.staticName}" />
                                                    <input type="hidden" name="{!r.r.Id}_host_email" value="{!r.host.address}" />
                                                </apex:outputPanel>
                                            </apex:outputPanel>
                                        </apex:column>

                                        <apex:column width="90" rendered="{!cOption.showRole}">
                                            <apex:facet name="header">{!$ObjectType.Loop__dsRecipient__c.fields.Loop__dsRoleName__c.label}</apex:facet>
                                            <apex:outputText value="{!r.r.Loop__dsRoleName__c}" />
                                            &nbsp;
                                        </apex:column>
                                        <apex:column width="90">
                                            <apex:facet name="header">{!$ObjectType.Loop__dsRecipient__c.fields.Loop__dsType__c.label}</apex:facet>
                                            <apex:outputText value="{!r.r.Loop__dsType__c}" />
                                        </apex:column>
                                        <apex:column width="175" rendered="{!cOption.showAccessCode}">
                                            <apex:facet name="header">{!$ObjectType.Loop__dsRecipient__c.fields.Loop__CustomAccessCode__c.label}</apex:facet>
                                            <apex:outputPanel id="accessCode" rendered="{!r.r.Loop__dsAllowAccessCode__c}" >
                                                <apex:inputText value="{!r.accessCode}" styleClass="slds-input" />
                                                <input type="hidden" name="{!r.r.Id}_accesscode" value="{!r.accessCode}" />
                                            </apex:outputPanel>
                                            &nbsp;
                                        </apex:column>
                                        <apex:column width="240" rendered="{!(cOption.r.RecordType.DeveloperName == 'DocuSign')}">
                                            <apex:facet name="header">{!$ObjectType.Note.label}</apex:facet>
                                            <apex:commandButton styleClass="slds-button slds-button--neutral {!r.btnRendered}" action="{!r.toggleEditNote}" value="{!LOWER($Label.loop__loop_edit)}" rerender="recipientTable,pageMessages" />
                                            <apex:inputTextarea id="note" value="{!r.note}" rows="3" styleClass="note {!r.noteRendered} slds-textarea" cols="34"></apex:inputTextarea>
                                            <input type="hidden" name="{!r.r.Id}_note" value="{!r.note}" />
                                        </apex:column>
                                    </apex:dataTable>
                                    <apex:outputPanel rendered="{!AND(OR(cOption.r.RecordType.DeveloperName == 'DocuSign',cOption.r.RecordType.DeveloperName == 'e_SignLive'),cOption.r.Loop__dsExposeExpirations__c)}" id="dsCustomExpire" layout="block" style="margin-top: 10px;">
                                        <apex:commandButton styleClass="slds-button slds-button--neutral" action="{!cOption.toggleExpireEdit}" value="{!$Label.loop__loop_edit} {!$Label.loop__ddp_remindexpires}" rerender="dsCustomExpire,pageMessages" />
                                        <table cellspacing="0" class="ds {!cOption.expireEditRendered}" id="expireEdit">
                                            <tr>
                                                <td>
                                                    <apex:outputLabel value="{!$ObjectType.Loop__DDP_Integration_Option__c.fields.Loop__dsReminderDelay__c.label}" for="dsRemDelay" />
                                                    <span class="helpButton">
                                                        <img class="helpOrb" title="Send reminder in # days. 0 days will not send a reminder." alt="Send reminder in # days. 0 days will not send a reminder." src="/s.gif" />
                                                    </span>
                                                </td>
                                                <td><apex:inputText value="{!cOption.remindDelay}" id="dsRemDelay" styleClass="slds-input" /></td>
                                                <td>
                                                    <apex:outputLabel value="{!$ObjectType.Loop__DDP_Integration_Option__c.fields.Loop__dsReminderFrequency__c.label}" for="dsRemFreq" />
                                                    <span class="helpButton">
                                                        <img class="helpOrb" title="Repeat reminder every # days until complete." alt="Repeat reminder every # days until complete." src="/s.gif" />
                                                    </span>
                                                </td>
                                                <td><apex:inputText value="{!cOption.remindFreq}" id="dsRemFreq" styleClass="slds-input" /></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <apex:outputLabel value="{!$ObjectType.Loop__DDP_Integration_Option__c.fields.Loop__dsExpireAfter__c.label}" for="dsExpire" />
                                                    <span class="helpButton">
                                                        <img class="helpOrb" title="Expire/Void Envelope in # days. 0 days will never expire the envelope." alt="Expire/Void Envelope in # days. 0 days will never expire the envelope." src="/s.gif" />
                                                    </span>
                                                </td>
                                                <td><apex:inputText value="{!cOption.expireAfter}" id="dsExpire" styleClass="slds-input" /></td>
                                                <td>
                                                    <apex:outputLabel value="{!$ObjectType.Loop__DDP_Integration_Option__c.fields.Loop__dsExpireWarn__c.label}" for="dsExpireWarn" />
                                                    <span class="helpButton">
                                                        <img class="helpOrb" title="Warn of expiration # days prior to expiration." alt="Warn of expiration # days prior to expiration." src="/s.gif" />
                                                    </span>
                                                </td>
                                                <td><apex:inputText value="{!cOption.expireWarn}" id="dsExpireWarn" rendered="{!cOption.r.RecordType.DeveloperName == 'DocuSign'}" styleClass="slds-input" /></td>
                                            </tr>
                                        </table>
                                        <input type="hidden" name="{!cOption.r.Id}_remindDelay" value="{!cOption.remindDelay}" />
                                        <input type="hidden" name="{!cOption.r.Id}_remindFreq" value="{!cOption.remindFreq}" />
                                        <input type="hidden" name="{!cOption.r.Id}_expireAfter" value="{!cOption.expireAfter}" />
                                        <input type="hidden" name="{!cOption.r.Id}_expireWarn" value="{!cOption.expireWarn}" />
                                    </apex:outputPanel>
                                </li>
                            </ol>
                        </apex:outputPanel>
                        <apex:outputPanel id="batchNotificationPanel">
                            <ol start="{!3+IF(showEnclosures, 1, 0)+IF(showReportSelection,1,0)+IF(showEsignRecipients,1,0)}">
                                <li>
                                    Notification Type:&nbsp;
                                    <apex:selectList size="1" value="{!batchNotification}">
                                        <apex:selectOption itemValue="BEGIN_AND_COMPLETE" itemLabel="Normal" />
                                        <apex:selectOption itemValue="ON_COMPLETE" itemLabel="On Complete" />
                                        <apex:selectOption itemValue="ON_ERROR" itemLabel="On Error" />
                                        <apex:selectOption itemValue="NONE" itemLabel="None" />
                                    </apex:selectList>
                                </li>
                            </ol>
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:actionRegion>
                <div class="buttondiv">
                    <apex:actionFunction action="{!submitMassLooplus}" name="submitLooplus" rerender="formPanel,looplusForm,aForm,loading,lpdiv,onloadScript">
                        <apex:param name="runTest" assignTo="{!runTest}" value="false" />
                    </apex:actionFunction>
                    <apex:commandButton styleClass="slds-button slds-button--brand" action="{!submitMassLooplus}" value=" {!$Label.loop__ddp_run} " rerender="formPanel,looplusForm,aForm,loading,lpdiv,onloadScript" onclick="var result = runSubmit('run'); if (result === false) { return false; } window.scrollTo(0, 0);" id="run">
                        <apex:param name="runTest" assignTo="{!runTest}" value="false" />
                    </apex:commandButton>
                    <apex:commandButton styleClass="slds-button slds-button--brand" action="{!submitMassLooplus}" value=" {!$Label.loop__ddp_run} Test " rerender="formPanel,looplusForm,aForm,loading,lpdiv,onloadScript" onclick="var result = runSubmit('run'); if (result === false) { return false; } window.scrollTo(0, 0);" id="runtest" rendered="{!showTestBtn}" style="border-color: green;">
                        <apex:param name="runTest" assignTo="{!runTest}" value="true" />
                    </apex:commandButton>
                    <apex:commandButton styleClass="slds-button slds-button--brand cancelBtn" action="{!cancel}" value=" {!$Label.loop__ddp_cancel} " onclick="return cancelClick();" id="cancel" />
                    <span id="wait">Please wait...</span>
                </div>
            </div>
        </apex:form>

        <apex:outputPanel id="loading">
            <div id="form_loading_img" class="{!IF(autoPost='true', '', 'invisible')}">
                <img src="/img/loading.gif" alt="loading" />
                <span>loading...</span>
            </div>
        </apex:outputPanel>

        <div class="invisible">
            <img src="https://apps.drawloop.com/graphics/backgrounds/fillBar2.png" />
        </div>
        <apex:outputPanel id="lpdiv" style="{!IF(loopAlert!='', 'visibility: hidden;', '')}">
            <apex:iframe id="lpIframe" frameborder="0" rendered="true" height="600" scrolling="true" />
        </apex:outputPanel>
    </div>
</apex:page>